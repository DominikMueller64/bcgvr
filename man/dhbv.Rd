% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R, R/dhbv.R
\name{dhbv}
\alias{dhbv}
\alias{dhbv}
\title{Simulation of doubled haploid breeding values}
\usage{
dhbv(individual, positions, effects, n_rep, m = 0L, p = 1, seed = NULL)
}
\arguments{
\item{individual}{The genotype of the individual for which the EMBV should be computed.
The structure is a nested list, where the first level refers to the two gametes and the
second level to chromatids (integer vectors) within gametes.}

\item{positions}{The genetic positions of loci. A list, where each element is a
(strictly) increasingly sorted double vector.}

\item{effects}{The effects of loci. A list, where each element is a double vector.}

\item{n_rep}{Integer. Number of replications.}

\item{m}{Integer. Interference parameter (\code{m=0} means no interference).}

\item{p}{Double. Proportion of chiasmata coming from non-interference process.}

\item{seed}{Integer. Seed for conducting simulation.}
}
\value{
A double vector.
}
\description{
A function for the fast simulation of double haploid breeding values.
}
\details{
This function simulates the breeding values of `n_rep` double haploid lines generated
by doubling of gametes meiotically derived from `individual`.
}
\examples{
## Simulate some data
set.seed(123L)
n_chr <- 10L
len <- rep(x = 300.0, times = n_chr)
n_loci <- rep(x = 1000L, times = n_chr)
alleles <- c(0L, 1L)
positions <- lapply(1L:n_chr, function(i) sort(runif(n_loci[i], min = 0.0, max = len[i])))
effects <- lapply(n_loci, rnorm)
ind <- replicate(n = 2L, lapply(n_loci, sample, x = alleles, replace = TRUE), simplify = FALSE)
n_rep <- 1e3L
bv <- embvr::dhbv(ind, positions, effects, n_rep, seed = 456L)
sd(bv)  ## estimate of square root of segregation variance

## Check the volatility of the estimate by simple bootstrapping.
sd(replicate(1e3L, sd(sample(bv, n_rep, TRUE))))
}
